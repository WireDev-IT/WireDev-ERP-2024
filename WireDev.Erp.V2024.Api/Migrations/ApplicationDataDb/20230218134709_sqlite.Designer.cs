// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WireDev.Erp.V1.Api.Context;

#nullable disable

namespace WireDev.Erp.V1.Api.Migrations.ApplicationDataDb
{
    [DbContext(typeof(ApplicationDataDbContext))]
    [Migration("20230218134709_sqlite")]
    partial class sqlite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.3");

            modelBuilder.Entity("WireDev.Erp.V1.Models.AuditLog.Models.Audit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("AuditDateTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuditType")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuditUser")
                        .HasColumnType("TEXT");

                    b.Property<string>("ChangedColumns")
                        .HasColumnType("TEXT");

                    b.Property<string>("KeyValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("NewValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("OldValues")
                        .HasColumnType("TEXT");

                    b.Property<string>("TableName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Audit");
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.AuditLog.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Details")
                        .HasMaxLength(150)
                        .HasColumnType("TEXT")
                        .HasColumnName("details");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Settings", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("NextGroupNumber")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("NextProductNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Uuid = new Guid("95531a40-8af5-4588-91f3-5a94f5d1053d"),
                            NextGroupNumber = 100,
                            NextProductNumber = 10000u
                        });
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Statistics.DayStats", b =>
                {
                    b.Property<long>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CanceledItems")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("DisposedItems")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Expenses")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Losses")
                        .HasColumnType("TEXT");

                    b.Property<uint>("PurchasedItems")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("RefundedItems")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("TEXT");

                    b.Property<uint>("SoldItems")
                        .HasColumnType("INTEGER");

                    b.HasKey("Date");

                    b.ToTable("DayStats");
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Statistics.MonthStats", b =>
                {
                    b.Property<long>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CanceledItems")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("DisposedItems")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Expenses")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Losses")
                        .HasColumnType("TEXT");

                    b.Property<uint>("PurchasedItems")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("RefundedItems")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("TEXT");

                    b.Property<uint>("SoldItems")
                        .HasColumnType("INTEGER");

                    b.HasKey("Date");

                    b.ToTable("MonthStats");
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Statistics.ProductStats", b =>
                {
                    b.Property<uint>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Transactions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("ProductStats");
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Statistics.TotalStats", b =>
                {
                    b.Property<long>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CanceledItems")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("DisposedItems")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Expenses")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Losses")
                        .HasColumnType("TEXT");

                    b.Property<uint>("PurchasedItems")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("RefundedItems")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("TEXT");

                    b.Property<uint>("SoldItems")
                        .HasColumnType("INTEGER");

                    b.HasKey("Date");

                    b.ToTable("TotalStats");
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Statistics.YearStats", b =>
                {
                    b.Property<long>("Date")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("CanceledItems")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("DisposedItems")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Expenses")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Losses")
                        .HasColumnType("TEXT");

                    b.Property<uint>("PurchasedItems")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("RefundedItems")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Revenue")
                        .HasColumnType("TEXT");

                    b.Property<uint>("SoldItems")
                        .HasColumnType("INTEGER");

                    b.HasKey("Date");

                    b.ToTable("YearStats");
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Storage.Group", b =>
                {
                    b.Property<int>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Used")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.ToTable("Groups");

                    b.HasData(
                        new
                        {
                            Uuid = 99,
                            Name = "Default_Group",
                            Used = false
                        });
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Storage.Price", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Locked")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RetailValue")
                        .HasColumnType("decimal(5, 3)");

                    b.Property<decimal>("SellValue")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Uuid");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Uuid = new Guid("302c51c4-4808-4fc9-ae8d-a29c9c1703e5"),
                            Archived = false,
                            Description = "Defaul_Price",
                            Locked = false,
                            RetailValue = 10m,
                            SellValue = 15m
                        });
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Storage.Product", b =>
                {
                    b.Property<uint>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Availible")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("EAN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Group")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prices")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Used")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Uuid = 9999u,
                            Active = false,
                            Archived = false,
                            Availible = 0,
                            EAN = "[]",
                            Group = 100,
                            Metadata = "{}",
                            Name = "Default_Product",
                            Prices = "[\"302c51c4-4808-4fc9-ae8d-a29c9c1703e5\"]",
                            Properties = "{}",
                            Used = false
                        });
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Storage.Purchase", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DatePosted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Items")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Posted")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Uuid = new Guid("6261e751-be55-4f07-9b11-fc388b2b269f"),
                            DatePosted = new DateTime(2023, 2, 18, 13, 47, 9, 131, DateTimeKind.Utc).AddTicks(4210),
                            Items = "[]",
                            Posted = true,
                            TotalPrice = 0m,
                            Type = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
