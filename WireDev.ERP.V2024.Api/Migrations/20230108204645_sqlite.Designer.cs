// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WireDev.Erp.V1.Api.Context;

#nullable disable

namespace WireDev.Erp.V1.Api.Migrations
{
    [DbContext(typeof(ProductDbContext))]
    [Migration("20230108204645_sqlite")]
    partial class sqlite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("WireDev.Erp.V1.Models.Storage.Category", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Color")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Uuid");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Uuid = new Guid("1c96c230-a083-4a8e-923f-30383ecf136d"),
                            Description = "Default_Catetgory"
                        });
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Storage.Price", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Locked")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("RetailValue")
                        .HasColumnType("decimal(5, 3)");

                    b.Property<decimal>("SellValue")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Uuid");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            Uuid = new Guid("832975c0-8992-4b92-a561-c1e486e39ab5"),
                            Archived = false,
                            Description = "Default_Price",
                            Locked = false,
                            RetailValue = 0m,
                            SellValue = 0m
                        });
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Storage.Product", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Active")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Archived")
                        .HasColumnType("INTEGER");

                    b.Property<uint>("Availible")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categories")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Metadata")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Prices")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Properties")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Used")
                        .HasColumnType("INTEGER");

                    b.HasKey("Uuid");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Uuid = new Guid("946bf7d2-3a92-4c8a-8d37-7be2d7f1aed0"),
                            Active = false,
                            Archived = false,
                            Availible = 0u,
                            Categories = "[]",
                            Metadata = "{}",
                            Name = "Default_Product",
                            Prices = "[]",
                            Properties = "{}",
                            Used = false
                        });
                });

            modelBuilder.Entity("WireDev.Erp.V1.Models.Storage.Purchase", b =>
                {
                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("DatePosted")
                        .HasColumnType("TEXT");

                    b.Property<string>("Items")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Posted")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("Uuid");

                    b.ToTable("Purchases");

                    b.HasData(
                        new
                        {
                            Uuid = new Guid("2ce5bea1-93f9-4fd5-90e8-c06a6828be02"),
                            DatePosted = new DateTime(2023, 1, 8, 20, 46, 45, 97, DateTimeKind.Utc).AddTicks(7600),
                            Items = "{}",
                            Posted = true,
                            TotalPrice = 0m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
